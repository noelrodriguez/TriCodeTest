@model TriCodeTest.Models.OrderModels.Order

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
  
            <span class="text-success">
                @ViewBag.Message
            </span>
       
        <span class="text-success">
            @ViewBag.Message
        </span>
 
            <div class="form-horizontal">
                <h4>OrderInfo</h4>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="DateTime" />
                <input type="hidden" asp-for="OrderMenuItems" />
                <input type="hidden" asp-for="TotalPrice" />
                <input type="hidden" asp-for="UserId" />
                <div class="form-group">
                    <label asp-for="Status" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <select id="statuses" asp-for="Status" asp-items="Html.GetEnumSelectList<Status>()" class="form-control"></select>
                        <span asp-validation-for="Status" class="text-danger" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#statuses option[value=0]").remove();
            $("#statuses option[value=1]").remove();
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
