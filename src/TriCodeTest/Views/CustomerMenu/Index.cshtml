@model TriCodeTest.Models.CustomerMenuViewModels.LoadMenuViewModel
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Customer Menu";
    // Pre-loads the _CustomerLayout partial view since customers and staff views are significantly different
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

@* This will need to be moved to a separate linked style sheet under ~/css/*@
<style>
#description span {
    font: bold 18px Cursive;
}
</style>

@* Categories Page *@

<div data-role="page" id="categories-page">
    @* Panel *@
    <div data-role="panel" class="myPanel" id="category-page-panel" data-position="right">
        <ul id="sidebar">
            <li>
                <a role="button" class="btn navbar-btn" href='@Url.Action("Cart", "CustomerMenu")'>Cart</a>
            </li>
            @await Html.PartialAsync("_CustomerLoginPartial")
        </ul>
    </div>
    @* Header *@
    <div data-role="header">
        <a href="" style="display:none"></a>
        <a href="#category-page-panel" data-role="button" data-icon="bars">
            Menu
        </a>
        <h3>
            <a href="#categories-page" style="color:inherit;text-decoration:none">Food Order</a>
        </h3>
    </div>
    @* Main Content *@
    <div role="main" class="ui-content">
        <ul id="categoryList" data-role="listview">
            @foreach (var category in Model.Categories)
            {
                <li onclick="loadSubcategories(@JsonConvert.SerializeObject(category))">
                    <a href="#"><h2>@category.Name</h2><p>@category.Description</p></a>
                </li>
            }
        </ul>
    </div>
</div>

@* Subcategories Page *@

<div data-role="page" id="subcategories-page">
    @* Panel *@
    <div data-role="panel" class="myPanel" id="subcategory-page-panel" data-position="right">
        <ul data-role="listview" id="sidebar">
            @await Html.PartialAsync("_CustomerLoginPartial")
        </ul>
    </div>
    @* Header *@
    <div data-role="header">
        <a href="#" data-rel="back" data-role="button">Back</a>
        <a href="#subcategory-page-panel" data-role="button" data-icon="bars">
            Menu
        </a>
        <h3>
            <a href="#categories-page" style="color:inherit;text-decoration:none">Food Order</a>
        </h3>
    </div>
    @* Main Content (gets loaded dynamically) *@
    <div role="main" class="ui-content">
        <ul id="subcategoryList" data-role="listview"></ul>
    </div>
</div>

@* Menu Items Page *@

<div data-role="page" id="menuitems-page">
    @* Panel *@
    <div data-role="panel" class="myPanel" id="menuitem-page-panel" data-position="right">
        <ul data-role="listview" id="sidebar">
            @await Html.PartialAsync("_CustomerLoginPartial")
        </ul>
    </div>
    @* Header *@
    <div data-role="header">
        <a href="#" data-rel="back" data-role="button">Back</a>
        <a href="#menuitem-page-panel" data-role="button" data-icon="bars">
            Menu
        </a>
        <h3>
            <a href="#categories-page" style="color:inherit;text-decoration:none">Food Order</a>
        </h3>
    </div>
    @* Main Content (gets loaded dynamically) *@
    <div role="main" class="ui-content">
        <ul id="menuitemList" data-role="listview"></ul>
    </div>
</div>

@* Details Page *@

<div data-role="page" id="details-page">
    @* Panel *@
    <div data-role="panel" class="myPanel" id="details-page-panel" data-position="right">
        <ul data-role="listview" id="sidebar">
            @await Html.PartialAsync("_CustomerLoginPartial")
        </ul>
    </div>
    @* Header *@
    <div data-role="header">
        <a href="#" data-rel="back" data-role="button">Back</a>
        <a href="#details-page-panel" data-role="button" data-icon="bars">
            Menu
        </a>
        <h3>
            <a href="#categories-page" style="color:inherit;text-decoration:none">Food Order</a>
        </h3>
    </div>
    @* Main Content (gets loaded dynamically) *@
    <div role="main" class="ui-content">
        <div id="details-header-row" class="ui-responsive">
            <img src="~/images/menuitem/food-banner.jpg" id="menuitemImg" style="width:100%;height:300px" />
        </div>
        <div id="description-container" class="ui-responsive">
            <h6 id="description">
                <span id="description-text">Menu item details would go here</span>
            </h6>
        </div>
        <div class="main-details ui-responsive">
            <div class="ui-block-a" style="width:50%">
                <div id="menuitem-labels" class="ui-bar">
                    Name
                </div>
            </div>
            <div class="ui-block-b" style="width:50%">
                <div id="menuitem-info" class="ui-bar">
                    Details
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
<script>
    // Gloval variable to see data of the page's Model in inspector in JSON format
    var loadedData = @Html.Raw(JsonConvert.SerializeObject(Model));

    // Makes sure to refresh the listview in the panel in the categories page (NOT REALLY NEEDED)
    //$(document).on("pageinit", "#subcategories-page", function() {
    //    $(":mobile-pagecontainer").pagecontainer("change", "#categories-page", {
    //        transition: 'slide'
    //    });
    //});

    // Dynamically loads subcategories based on category chosen
    function loadSubcategories(category){
        var list = $("#subcategoryList");
        list.empty();
        for (var i = 0; i < category.Subcategories.length; i++){
            var subcategory = category.Subcategories[i];
            list.append("<li onclick='loadMenuitems(" + JSON.stringify(subcategory) + ")'><a href='#'><h2>" + subcategory.Name + "</h2><p>" + subcategory.Description + "</p></a></li>");
        }
        $(":mobile-pagecontainer").pagecontainer("change", "#subcategories-page", {
            transition: 'slide'
        });
    }
    // Refreshes the subcategory list before page loads to format it to jquery mobile
    $(document).on("pagebeforeshow", "#subcategories-page", function() {
        $("#subcategoryList").listview("refresh");
        if($("#subcategoryList").is(":empty")){
            $(":mobile-pagecontainer").pagecontainer("change", "#categories-page", {
            });
        }
    });

    // Dynamically loads menu items based on subcategory chosen
    function loadMenuitems(subcategory){
        var list = $("#menuitemList");
        list.empty();
        for (var i = 0; i < subcategory.MenuItems.length; i++){
            var menuitem = subcategory.MenuItems[i];
            list.append("<li onclick='loadDetails(" + JSON.stringify(menuitem) + ")'><a href='#'><h2>" + menuitem.Name + "</h2><p>" + menuitem.Description + "</p></a></li>");
        }
        $(":mobile-pagecontainer").pagecontainer("change", "#menuitems-page", {
            transition: 'slide'
        });
    }
    // Refreshes the menu items list before page loads to format it to jquery mobile
    $(document).on("pagebeforeshow", "#menuitems-page", function() {
        $("#menuitemList").listview("refresh");
        if($("#menuitemList").is(":empty")){
            $(":mobile-pagecontainer").pagecontainer("change", "#categories-page", {
            });
        }
    });

    // Dynamically loads details of menu item (THIS MIGHT NOT BE NEEDED IF WE DO IT LIKE STARBUCKS)
    function loadDetails(menuitem){
        console.log(menuitem);
        var URL = '@Url.Action("PostMenuItemToCart", "CustomerMenu")' + menuitem.Id;
        window.location = '@Url.Action("PostMenuItemToCart", "CustomerMenu")' + '/' + menuitem.Id;
        @*$.ajax({
            url: '@Url.Action("PostMenuItemToCart", "CustomerMenu")',
            type: 'POST',
            data: JSON.stringify(menuitem),
            contentType: 'aplication/json',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            success: function(response){
                //if (response == 'True'){
                //    location.reload();
                //}
                console.log(response);
            },
            error: function(error){
                x = error;
            }
        });*@
        @*@{ var test = JsonConvert.DeserializeObject(@:menuitem);
            Url.Action("PostMenuItemToCart", "CustomerMenu");}*@
        //var descriptionText = $("#description-text");
        //descriptionText.empty();
        //descriptionText.append(menuitem.Description);
        //$(":mobile-pagecontainer").pagecontainer("change", "#details-page", {
        //    transition: 'slide'
        //});
    }
</script>
}
