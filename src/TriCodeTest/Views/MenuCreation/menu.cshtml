@model TriCodeTest.Models.MenuViewModels.MenuCreationViewModel

@{ 
    var categoryList = Model.CategoryMenu.ToList();
    var subCategoryList = Model.SubCategoryMenu.ToList();
    var menuItemList = Model.MenuItemMenu.ToList();
    var menuItemIngredientsList = Model.MenuItemIngredientsMenu.ToList();
    var addonList = Model.AddonMenu.ToList();
    var ingredientsList = Model.IngridientMenu.ToList();
}

<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <h2>Menu Management</h2>
    <p>Test of menu creation page</p>
    <div style="display:inline-block;width:100%;">
        @*Category Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Categories</h3>
            <table id="categories" class="display">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in categoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                        </tr>

                    }
                    @*<tr>
                        <td>Drinks</td>
                        <td>(Descrption)</td>
                    </tr>
                    <tr>
                        <td>Lunch</td>
                        <td>(Description)</td>
                    </tr>
                    <tr>
                        <td>Dinner</td>
                        <td>(Description)</td>
                    </tr>*@
                </tbody>
            </table>

            <button id="add-category" class="btn">Add Category</button>
            <button id="remove-category" class="btn">Remove Category</button>
            <button id="edit-category" class="btn">Edit Category</button>
        </div>

        @*Subcategory Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Subcategories</h3>
            <table id="subcategory" class="display">
                <thead>
                    <tr>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in subCategoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                        </tr>

                    }
                    @*<tr>
                        <td>Coffee</td>
                    </tr>
                    <tr>
                        <td>Tea</td>
                    </tr>
                    <tr>
                        <td>Soda</td>
                    </tr>
                    <tr>
                        <td>Cold Case</td>
                    </tr>
                    <tr>
                        <td>Specialty</td>
                    </tr>*@
                </tbody>
            </table>

            <button id="add-subcategory" class="btn">Add Subcategory</button>
            <button id="remove-subcategory" class="btn">Remove Subcategory</button>
            <button id="edit-subcategory" class="btn">Edit Subcategory</button>
        </div>

        @*Menu Items Table*@
        <div style="float:left;width:30%;" class="table-bordered">
            <h3 style="text-align:center">Menu Items</h3>
                <table id="menuitem" class="display">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in menuItemList)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Price</td>
                            </tr>

                        }

                        @*<tr>
                            <td>Coke</td>
                            <td>$1.00</td>
                        </tr>
                        <tr>
                            <td>Sprite</td>
                            <td>$1.00</td>
                        </tr>
                        <tr>
                            <td>Root Beer</td>
                            <td>$1.00</td>
                        </tr>*@
                    </tbody>
                </table>

                <button id="add-menuitem" class="btn">Add Menu Item</button>
                <button id="remove-menuitem" class="btn">Remove Menu Item</button>
                <button id="edit-menuItem" class="btn">Edit Selected Menu Item</button>
        </div>
    </div>
</body>
</html>
@*Load datatables css*@
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.13/css/jquery.dataTables.css" />
@*Load datatables js*@
@section Scripts{
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.13/js/jquery.dataTables.js"></script>
    <script>
        //http://stackoverflow.com/questions/17356497/get-the-table-row-data-with-a-click
        $(document).ready(function () {
            //Global Dictionaries
            var categoryDictionary = [];
            var subCategoryDictionary = [];
            var menuItemDictionary = [];
            var addonDictionary = [];
            var ingredientsDictionary = [];
            var menuItemIngredientsDictionary = [];

            //load dictionaries with values from the model

            //populate category dictionary
            @foreach (var item in categoryList)
            {
                <text>
            categoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategories",
                        "@item.Description",
                        "@item.Id"]
            });
            </text>

            }

            //populate subcategory dictionary
            @foreach (var item in subCategoryList)
            {
                <text>
            subCategoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Category.Name",
                        "@item.MenuItems",
                        "@item.AddOns",
                        "@item.Description",
                        "@item.CategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate menuItem dictionary
            @foreach (var item in menuItemList)
            {
                <text>
            menuItemDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory",
                        "@item.MenuItemIngredients",
                        "@item.Price",
                        "@item.Size",
                        "@item.ItemImage",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            @foreach (var item in menuItemIngredientsList)
            {
                <text>
            menuItemIngredientsDictionary.push({
                key: "@item.Ingredient",
                value: ["@item.IngredientId",
                        "@item.MenuItem",
                        "@item.MenuItemId"]
            });
                </text>

            }

            //Populate Addon dictionary
            @foreach (var item in addonList)
            {
                <text>
            addonDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory",
                        "@item.Description",
                        "@item.Price",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate ingredients Dictionary
            @foreach (var item in ingredientsList)
            {
                <text>
            ingredientsDictionary.push({
                key: "@item.Name",
                value: ["@item.MenuItemIngredients",
                        "@item.Description",
                        "@item.Option",
                        "@item.Id"]
            });
                </text>

            }

            //Categories Table Functions, These functions control the functionality and look and feel of the menu data tables
            var categoryTable = $('#categories').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });



            $('#categories tbody').on('click', 'tr', function () {
                //Variable to hold row data
                var rowData = categoryTable.row(this).data();
                console.log(rowData);
                @*@Html.Hidden("rowData", 0);*@
                @*var razorRowData = "@Html.ActionLink("Link text", "Action Name", new { id = "rowData"})"*@

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    categoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
                //Clear subCategory and menuItem tables
                subCategoryTable.clear();
                subCategoryTable.draw(); // redraws table with no data
                menuItemTable.clear();
                menuItemTable.draw(); // redraws table with no data

                //Iterate over all the subcategories in subCategoryDictionary and find
                //those with the same Category as the one currently selected
                for (var item in subCategoryDictionary)
                {
                    //console.log(subCategoryDictionary[item].key); //The name of the subCategory
                    //console.log(subCategoryDictionary[item].value) //An array of different values of the object
                    //console.log(rowData[0])
                    console.log("@subCategoryList.First().Category");

                    if(subCategoryDictionary[item].value[0].toString() == rowData[0])
                    {
                        console.log("TEST");
                        subCategoryTable.row.add([subCategoryDictionary[item].key]).draw(false);
                    }
                    
                }
                //subCategoryTable.draw();



                @*var text = "@Html.ActionLink( "Link text", "Action Name", new { id = "JSVar" })"
                text = text.replace("JSVar", rowData);*@

                //create razor string
                //var subCategoryDictionary = {};

                @*@foreach(var item in subCategoryList)
                {
                    <text>
                        console.log("@item.Name");
                    </text>
                    //console.log(item);
                }*@

            });

            

            //Remove Category Button Listener
            $('#remove-category').click(function () {
                categoryTable.row('.selected').remove().draw(false);
            });

            //Items Table Functions, These functions control the functionality and look and feel of the menu data tables
            var subCategoryTable = $('#subcategory').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#subcategory tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    subCategoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }
            });

            //Remove subcategory Button Listener
            $('#remove-subcategory').click(function () {
                subCategoryTable.row('.selected').remove().draw(false);
            });

            //Addons Table Functions, These functions control the functionality and look and feel of the menu data tables
            var menuItemTable = $('#menuitem').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#menuitem tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    menuItemTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }
            });

            //Remove menuitem Button Listener
            $('#remove-menuitem').click(function () {
                menuItemTable.row('.selected').remove().draw(false);
            });

            //Add button listeners
            //Add category
            $('#add-category').click(function () {
                //Display category Modal
                alert("@categoryList.First().Name");

                //Add Category to Database and Category table remove all items from subcategories and Menu Items
                categoryTable.row.add([
                    "@categoryList.First().Name",
                    "@categoryList.First().Description"
                ]).draw(false);


            });

        });
    </script>

}