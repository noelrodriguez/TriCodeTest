@model TriCodeTest.Models.MenuViewModels.MenuCreationViewModel

@{
    var categoryList = Model.CategoryMenu.ToList();
    var subCategoryList = Model.SubCategoryMenu.ToList();
    var menuItemList = Model.MenuItemMenu.ToList();
    var menuItemIngredientsList = Model.MenuItemIngredientsMenu.ToList();
    var addonList = Model.AddonMenu.ToList();
    var ingredientsList = Model.IngridientMenu.ToList();
}

<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <h2>Menu Management</h2>
    <p>Test of menu creation page</p>
    <div style="display:inline-block;width:100%;">
        @*Category Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Categories</h3>
            <table id="categories" class="display">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in categoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                        </tr>

                    }
                </tbody>
            </table>

            <div class="btn pull-left" style="width:100%">
                <table style="width:100%">
                    <tr><td><button id="add-category" class="btn" style="width:100%">Add Category</button></td></tr>
                    <tr><td><button id="remove-category" class="btn" style="width:100%">Remove Category</button></td></tr>
                    <tr><td><button id="edit-category" class="btn" style="width:100%">Edit Category</button></td></tr>
                </table>
            </div>

        </div>

        @*Subcategory Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Subcategories</h3>
            <table id="subcategory" class="display">
                <thead>
                    <tr>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in subCategoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                        </tr>

                    }
                </tbody>
            </table>

            <div class="btn pull-left" style="width:100%">
                <table style="width:100%">
                    <tr><td><button id="add-subcategory" class="btn" style="width:100%">Add Subcategory</button></td></tr>
                    <tr><td><button id="remove-subcategory" class="btn" style="width:100%">Remove Subcategory</button></td></tr>
                    <tr><td><button id="edit-subcategory" class="btn" style="width:100%">Edit Subcategory</button></td></tr>
                </table>
            </div>

        </div>

        @*Menu Items Table*@
        <div style="float:left;width:30%;" class="table-bordered">
            <h3 style="text-align:center">Menu Items</h3>
            <table id="menuitem" class="display">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in menuItemList)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Price</td>
                        </tr>

                    }
                </tbody>
            </table>
            <div class="btn pull-left" style="width:100%">
                <table style="width:100%">
                    <tr><td><button id="add-menuitem" class="btn" style="width:100%">Add Menu Item</button></td></tr>
                    <tr><td><button id="remove-menuitem" class="btn" style="width:100%">Remove Menu Item</button></td></tr>
                    <tr><td><button id="edit-menuitem" class="btn" style="width:100%">Edit Selected Menu Item</button></td></tr>
                </table>
            </div>
        </div>
    </div>
</body>
</html>

@*Add Category Modal*@
<div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalTitle">Add Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="category-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="category-name-add">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="category-description-add"></textarea>
                    </div>
                    @*<div>
                            <button class="btn btn-primary" id="categorySubmit" type="submit">Submit</button>
                        </div>*@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" type="button" id="addCategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Edit Category Modal*@
<div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalTitle">Edit Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="category-id-edit" class="form-control-label">Category ID</label>
                        <input type="text" class="form-control" id="category-id-edit" readonly />
                    </div>
                    <div class="form-group">
                        <label for="category-name-edit" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="category-name-edit">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="category-description-edit"></textarea>
                    </div>
                    @*<div>
                            <button class="btn btn-primary" id="categorySubmit" type="submit">Submit</button>
                        </div>*@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" type="button" id="editCategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Add Subcategory Modal*@
<div class="modal fade" id="addSubcategoryModal" tabindex="-1" role="dialog" aria-labelledby="subcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSubcategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="subcategory-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="subcategory-name-add">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="subcategory-description-add"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addSubcategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Edit Subcategory Modal*@
<div class="modal fade" id="editSubcategoryModal" tabindex="-1" role="dialog" aria-labelledby="subcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSubcategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="subcategory-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="subcategory-name">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desctiption-text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="editSubcategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Edit Menu Item*@
<div class="modal fade" id="editMenuitemModal" tabindex="-1" role="dialog" aria-labelledby="menuitemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="menuitem-image" class="form-control-label">Menu Item Image</label>
                        <input type="file" name="menuitemImage" class="form-control" id="menuitem-image" />
                    </div>
                    <div class="form-group">
                        <label for="menuitem-name" class="form-control-label">Menu Item</label>
                        <input type="text" class="form-control" id="menuitem-name">
                    </div>
                    <div class="form-group">
                        <label for="menuitem-price" class="form-control-label">Price</label>
                        <input type="number" class="form-control" id="menuitem-price" />
                    </div>
                    <div class="form-group">
                        <label for="menuitem-size" class="form-control-label">Size</label>
                        <input type="number" class="form-control" id="menuitem-size" />
                    </div>
                    <div class="form-group">
                        <label for="menuitem-ingredients" class="form-control-label">Ingredients</label>
                        <textarea class="form-control" id="menuitem-ingredients"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="editMenuitemSubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Load datatables css*@
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/css/bootstrap-dialog.min.css" /> @*Allows use of bootstrapDialog*@
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.13/css/jquery.dataTables.css" />
@*Load datatables js*@
@section Scripts{
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.13/js/jquery.dataTables.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/js/bootstrap-dialog.min.js"></script>
    <script>
        //http://stackoverflow.com/questions/17356497/get-the-table-row-data-with-a-click
        $(document).ready(function () {
            //Global Dictionaries
            var categoryDictionary = [];
            var subCategoryDictionary = [];
            var menuItemDictionary = [];
            var addonDictionary = [];
            var ingredientsDictionary = [];
            var menuItemIngredientsDictionary = [];

            //load dictionaries with values from the model

            //populate category dictionary
            @foreach (var item in categoryList)
            {
                <text>
            categoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategories",
                        "@item.Description",
                        "@item.Id"]
            });
            </text>

            }

            //populate subcategory dictionary
            @foreach (var item in subCategoryList)
            {
                <text>
            subCategoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Category.Name",
                        "@item.MenuItems",
                        "@item.AddOns",
                        "@item.Description",
                        "@item.CategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate menuItem dictionary
            @foreach (var item in menuItemList)
            {
                <text>
            menuItemDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory.Name",
                        "@item.MenuItemIngredients",
                        "@item.Price",
                        "@item.Size",
                        "@item.ItemImage",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate menuItemIngredientsDictionary
            @foreach (var item in menuItemIngredientsList)
            {
                <text>
            menuItemIngredientsDictionary.push({
                key: "@item.Ingredient.Name",
                value: ["@item.IngredientId",
                        "@item.MenuItem.Name",
                        "@item.MenuItemId"]
            });
                </text>

            }

            //Populate Addon dictionary
            @foreach (var item in addonList)
            {
                <text>
            addonDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory.Name",
                        "@item.Description",
                        "@item.Price",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate ingredients Dictionary
            @foreach (var item in ingredientsList)
            {
                <text>
            ingredientsDictionary.push({
                key: "@item.Name",
                value: ["@item.MenuItemIngredients",
                        "@item.Description",
                        "@item.Option",
                        "@item.Id"]
            });
                </text>

            }

            //Categories Table Functions, These functions control the functionality and look and feel of the menu data tables
            var categoryTable = $('#categories').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });



            $('#categories tbody').on('click', 'tr', function () {
                //Variable to hold selected Category row data
                var rowData = categoryTable.row(this).data();

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    categoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
                //Clear subCategory and menuItem tables
                subCategoryTable.clear();
                subCategoryTable.draw(); // redraws table with no data
                menuItemTable.clear();
                menuItemTable.draw(); // redraws table with no data

                //Iterate over all the subcategories in subCategoryDictionary and find
                //those with the same Category as the one currently selected
                for (var item in subCategoryDictionary)
                {

                    if(subCategoryDictionary[item].value[0].toString() == rowData[0])
                    {
                        subCategoryTable.row.add([subCategoryDictionary[item].key]).draw(false);
                    }
                }

            });

            //Add category
            $('#add-category').click(function () {
                //Display category Modal

                //Display modal
                $('#addCategoryModal').modal('show');
                var $modal = $('#addCategoryModal');
                $modal.find('.modal-title').text('Add Category') // Change the modal title

                // On submit add new category and description to the database, redraw the table from the database, and select the new category
                //$modal.on('submit', function (e) {
                //    e.preventDefault();
                //    $.post('test',
                //        function (data, status, xhr) {
                //            alert($('#categorySubmit').value());

                //        });
                //alert($('#categorySubmit').val());
                //});
                //alert($('#categorySubmit').val());
                // On close, do nothing.

                //Add Category to Database and Category table remove all items from subcategories and Menu Items
                @*categoryTable.row.add([
                    "@categoryList.First().Name",
                    "@categoryList.First().Description"
                ]).draw(false);*@


                });

            //Edit Category Button listener
            $('#edit-category').click(function () {
                //Check if a row is selected. If not don't show modal
                var $row = categoryTable.$('tr.selected');

                if ($row.length)
                {
                    var rowData = categoryTable.row('tr.selected').data();

                    var data = {};
                    //Find all information on selected menu item
                    for (var item in categoryDictionary) {
                        if (categoryDictionary[item].key == rowData[0]) {
                            data = categoryDictionary[item];
                        }
                    }

                    $('#editCategoryModal').modal('show');
                    var $modal = $('#editCategoryModal');
                    $modal.find('.modal-title').text('Edit ' + rowData[0]); //Add category name to the title
                    $('#category-id-edit').val(data.value[2]);
                    $('#category-name-edit').val(data.key);
                    $modal.find('.modal-body textarea').val(rowData[1]) //Add Category Description to Description box
                }

            });

            //Remove Category Button Listener
            $('#remove-category').click(function () {
                var $row = categoryTable.$('tr.selected');

                if ($row.length)
                {
                    var rowData = categoryTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Category?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                categoryTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }

                //Update database on removed Category


                //categoryTable.row('.selected').remove().draw(false);
            });

            //Items Table Functions, These functions control the functionality and look and feel of the menu data tables
            var subCategoryTable = $('#subcategory').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#subcategory tbody').on('click', 'tr', function () {
                var rowData = subCategoryTable.row(this).data();


                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    subCategoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }

                //ACTIVATE TABLE SWITCHING!
                menuItemTable.clear();
                menuItemTable.draw();

                for (var item in menuItemDictionary)
                {
                    if (menuItemDictionary[item].value[0].toString() == rowData[0])
                    {
                        //Add new menuItem to the table
                        //menuItemTable.row.add([menuItemDictionary[item].key]).draw(false);
                        menuItemTable.row.add([menuItemDictionary[item].key, menuItemDictionary[item].value[2]]).draw( false );
                    }

                }

            });

            //Add subcategory Button Listener
            $('#add-subcategory').click(function () {

                $('#addSubcategoryModal').modal('show');
                var $modal = $('#addSubcategoryModal');
                $modal.find('.modal-title').text('Add Subcategory') // Change the modal title
            });

            //Edit subcategory Button Listener
            $('#edit-subcategory').click(function () {
                var $row = subCategoryTable.$('tr.selected');

                if ($row.length)
                {
                    var rowData = subCategoryTable.row('tr.selected').data();

                    $('#editSubcategoryModal').modal('show');
                    var $modal = $('#editSubcategoryModal');
                    $modal.find('.modal-title').text('Edit ' + rowData[0]); //Add category name to the title
                    $modal.find('.modal-body input').val(rowData[0]);//Add category name
                    $modal.find('.modal-body textarea').val("EXAMPLE DESCRIPTION FOR SUBCATEGORY")

                    //On submit modal will submit data to database to be changed and redraw the table with the edited data.

                    //On close nothing happens

                }

            });

            //Remove subcategory Button Listener
            $('#remove-subcategory').click(function () {
                var $row = subCategoryTable.$('tr.selected');

                if ($row.length) {
                    var rowData = subCategoryTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Subcategory?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                subCategoryTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }
            });

            //Addons Table Functions, These functions control the functionality and look and feel of the menu data tables
            var menuItemTable = $('#menuitem').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#menuitem tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    menuItemTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }
            });

            $('#edit-menuitem').click(function () {
                var $row = menuItemTable.$('tr.selected');

                if ($row.length)
                {
                    var rowData = menuItemTable.row('tr.selected').data();
                    var data = {};
                    //Find all information on selected menu item
                    for (var item in menuItemDictionary)
                    {
                        if (menuItemDictionary[item].key == rowData[0])
                        {
                            data = menuItemDictionary[item];
                        }
                    }


                    $('#editMenuitemModal').modal('show');
                    var $modal = $('#editMenuitemModal');
                    $modal.find('.modal-title').text('Edit ' + rowData[0]); //Add category name to the title
                    //$modal.find('.modal-body input').val(rowData[0]);
                    $('#menuitem-image').val(data.value[4]);
                    $('#menuitem-name').val(data.key);
                    $('#menuitem-price').val(data.value[2]);
                    $('#menuitem-size').val(data.value[3]);
                    $('#menuitem-ingredients').val(data.value[1]);


                    //$modal.find('.modal-body input').val(rowData[0]);//Add category name
                    //$modal.find('.modal-body textarea').val("EXAMPLE DESCRIPTION FOR SUBCATEGORY")

                    //On submit modal will submit data to database to be changed and redraw the table with the edited data.

                    //On close nothing happens


                }
            });

            //Remove menuitem Button Listener
            $('#remove-menuitem').click(function () {
                var $row = menuItemTable.$('tr.selected');

                if ($row.length) {
                    var rowData = menuItemTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Menu Item?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                menuItemTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }
            });

            //===============MODAL SUBMIT CONTROLS FOR POSTING TO THE DATABASE============

            //Add Category and Edit Category submit listeners
            $('#addCategorySubmit').on('click', function(e) {
                console.log("Submit Add Category");
                //====================UNCOMMENT THIS ONCE CONTROLLER IS SETUP================================
                //Post to MenuCreationController/AddCategory
                //$.post("MenuCreationController/AddCategory", { CategoryName: $('#category-name-add').val(), CategoryDescription: $('#category-description-add').val() }, function (data) {
                //    //Post data to the database
                //})
                //    .done(function () {
                //        //On Successfully updating Database update the Category table wit the new Category
                //    })
                //    .fail(function () {
                //        //On Failing to update the database indicate this to the user
                //    });
                var categoryName = $('#category-name-add').val();
                var categoryDescription = $('#category-description-add').val();
                console.log(categoryName);
                console.log(categoryDescription);
                $('#addCategoryModal').modal('hide');
            });

            $('#editCategorySubmit').on('click', function (e) {
                console.log("Submit Edit Category");

                var categoryName = $('#category-name-edit').val();
                var categoryDescription = $('#category-description-edit').val();
                var categoryId = $('#category-id-edit').val();
                //Post to MenuCreationController/EditCategory
                //$.post("MenuCreationController/EditCategory", { CategoryID: categoryId, CategoryName: categoryName, CategoryDescription: categoryDescription }, function (data) {

                //})
                //    .done(function () {
                //        //On successfully updating Database, update the category with the new information.
                //    })
                //    .fail(function () {
                //        //On Failing to update the category indicate this to the user.
                //});
                console.log("Category Name: " + categoryName);
                console.log("Category Description: " + categoryDescription);
                console.log("Category id: " + categoryId);

                $('#editCategoryModal').modal('hide');
            });


            //Add Subcategory and Edit Subcategory submit listeners.
            $('#addSubcategorySubmit').on('click', function (e) {
                console.log("Submit Add Subcategory");

                var subCategoryName = $('#subcategory-name-add').val();
                var subCategoryDescription = $('#subcategory-description-add').val();
                console.log(subCategoryName);
                console.log(subCategoryDescription);


                $('#addSubcategoryModal').modal('hide');
            });

            $('#editSubcategorySubmit').on('click', function (e) {
                console.log("Submit Edit Subcategory");


                $('#editSubcategoryModal').modal('hide');
            });

        });
    </script>

}