@model TriCodeTest.Models.MenuViewModels.MenuCreationViewModel

@{ 
    var categoryList = Model.CategoryMenu.ToList();
    var subCategoryList = Model.SubCategoryMenu.ToList();
    var menuItemList = Model.MenuItemMenu.ToList();
    var menuItemIngredientsList = Model.MenuItemIngredientsMenu.ToList();
    var addonList = Model.AddonMenu.ToList();
    var ingredientsList = Model.IngridientMenu.ToList();
}

<!DOCTYPE html>
<html>
<head>
</head>
<body>
    <h2>Menu Management</h2>
    <p>Test of menu creation page</p>
    <div style="display:inline-block;width:100%;">
        @*Category Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Categories</h3>
            <table id="categories" class="display">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in categoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                        </tr>

                    }
                </tbody>
            </table>

            <button id="add-category" class="btn">Add Category</button>
            <button id="remove-category" class="btn">Remove Category</button>
            <button id="edit-category" class="btn">Edit Category</button>
        </div>

        @*Subcategory Table*@
        <div style="float:left;width:30%;padding-right:10px" class="table-bordered">
            <h3 style="text-align:center">Subcategories</h3>
            <table id="subcategory" class="display">
                <thead>
                    <tr>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in subCategoryList)
                    {
                        <tr>
                            <td>@item.Name</td>
                        </tr>

                    }
                </tbody>
            </table>

            <button id="add-subcategory" class="btn">Add Subcategory</button>
            <button id="remove-subcategory" class="btn">Remove Subcategory</button>
            <button id="edit-subcategory" class="btn">Edit Subcategory</button>
        </div>

        @*Menu Items Table*@
        <div style="float:left;width:30%;" class="table-bordered">
            <h3 style="text-align:center">Menu Items</h3>
                <table id="menuitem" class="display">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in menuItemList)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Price</td>
                            </tr>

                        }
                    </tbody>
                </table>

                <button id="add-menuitem" class="btn">Add Menu Item</button>
                <button id="remove-menuitem" class="btn">Remove Menu Item</button>
                <button id="edit-menuItem" class="btn">Edit Selected Menu Item</button>
        </div>
    </div>
</body>
</html>

@*Add Category Modal*@
<div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="category-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="category-name">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desctiption-text"></textarea>
                    </div>
                    @*<div>
                            <button class="btn btn-primary" id="categorySubmit" type="submit">Submit</button>
                        </div>*@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" type="button" id="addCategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Edit Category Modal*@
<div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="category-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="category-name">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desctiption-text"></textarea>
                    </div>
                    @*<div>
                        <button class="btn btn-primary" id="categorySubmit" type="submit">Submit</button>
                    </div>*@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" type="button" id="editCategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Add Subcategory Modal*@
<div class="modal fade" id="addSubcategoryModal" tabindex="-1" role="dialog" aria-labelledby="subcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="subcategory-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="subcategory-name">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desctiption-text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addSubcategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Edit Subcategory Modal*@
<div class="modal fade" id="editSubcategoryModal" tabindex="-1" role="dialog" aria-labelledby="subcategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModal">Edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="subcategory-name" class="form-control-label">Category</label>
                        <input type="text" class="form-control" id="subcategory-name">
                    </div>
                    <div class="form-group">
                        <label for="description-text" class="form-control-label">Description</label>
                        <textarea class="form-control" id="desctiption-text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="editSubcategorySubmit">Submit</button>
            </div>
        </div>
    </div>
</div>

@*Confirm Delete Modal*@
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you would like to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmDelete">Yes</button>
            </div>
        </div>
    </div>
</div>


@*Load datatables css*@
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/css/bootstrap-dialog.min.css" /> @*Allows use of bootstrapDialog*@
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.13/css/jquery.dataTables.css" />
@*Load datatables js*@
@section Scripts{
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.13/js/jquery.dataTables.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/js/bootstrap-dialog.min.js"></script>
    <script>
        //http://stackoverflow.com/questions/17356497/get-the-table-row-data-with-a-click
        $(document).ready(function () {
            //Global Dictionaries
            var categoryDictionary = [];
            var subCategoryDictionary = [];
            var menuItemDictionary = [];
            var addonDictionary = [];
            var ingredientsDictionary = [];
            var menuItemIngredientsDictionary = [];

            //load dictionaries with values from the model

            //populate category dictionary
            @foreach (var item in categoryList)
            {
                <text>
            categoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategories",
                        "@item.Description",
                        "@item.Id"]
            });
            </text>

            }

            //populate subcategory dictionary
            @foreach (var item in subCategoryList)
            {
                <text>
            subCategoryDictionary.push({
                key: "@item.Name",
                value: ["@item.Category.Name",
                        "@item.MenuItems",
                        "@item.AddOns",
                        "@item.Description",
                        "@item.CategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate menuItem dictionary
            @foreach (var item in menuItemList)
            {
                <text>
            menuItemDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory.Name",
                        "@item.MenuItemIngredients",
                        "@item.Price",
                        "@item.Size",
                        "@item.ItemImage",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate menuItemIngredientsDictionary
            @foreach (var item in menuItemIngredientsList)
            {
                <text>
            menuItemIngredientsDictionary.push({
                key: "@item.Ingredient.Name",
                value: ["@item.IngredientId",
                        "@item.MenuItem.Name",
                        "@item.MenuItemId"]
            });
                </text>

            }

            //Populate Addon dictionary
            @foreach (var item in addonList)
            {
                <text>
            addonDictionary.push({
                key: "@item.Name",
                value: ["@item.Subcategory.Name",
                        "@item.Description",
                        "@item.Price",
                        "@item.SubcategoryId",
                        "@item.Id"]
            });
            </text>
            }

            //Populate ingredients Dictionary
            @foreach (var item in ingredientsList)
            {
                <text>
            ingredientsDictionary.push({
                key: "@item.Name",
                value: ["@item.MenuItemIngredients",
                        "@item.Description",
                        "@item.Option",
                        "@item.Id"]
            });
                </text>

            }

            //Categories Table Functions, These functions control the functionality and look and feel of the menu data tables
            var categoryTable = $('#categories').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });



            $('#categories tbody').on('click', 'tr', function () {
                //Variable to hold selected Category row data
                var rowData = categoryTable.row(this).data();
  
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    categoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
                //Clear subCategory and menuItem tables
                subCategoryTable.clear();
                subCategoryTable.draw(); // redraws table with no data
                menuItemTable.clear();
                menuItemTable.draw(); // redraws table with no data

                //Iterate over all the subcategories in subCategoryDictionary and find
                //those with the same Category as the one currently selected
                for (var item in subCategoryDictionary)
                {

                    if(subCategoryDictionary[item].value[0].toString() == rowData[0])
                    {
                        subCategoryTable.row.add([subCategoryDictionary[item].key]).draw(false);
                    }
                }

            });

            //Add category
            $('#add-category').click(function () {
                //Display category Modal

                //Display modal
                $('#addCategoryModal').modal('show');
                var $modal = $('#addCategoryModal');
                $modal.find('.modal-title').text('Add Category') // Change the modal title

                // On submit add new category and description to the database, redraw the table from the database, and select the new category
                //$modal.on('submit', function (e) {
                //    e.preventDefault();
                //    $.post('test',
                //        function (data, status, xhr) {
                //            alert($('#categorySubmit').value());

                //        });
                //alert($('#categorySubmit').val());
                //});
                //alert($('#categorySubmit').val());
                // On close, do nothing.

                //Add Category to Database and Category table remove all items from subcategories and Menu Items
                @*categoryTable.row.add([
                    "@categoryList.First().Name",
                    "@categoryList.First().Description"
                ]).draw(false);*@


                });

            //Edit Category Button listener
            $('#edit-category').click(function () {
                //Check if a row is selected. If not don't show modal
                var $row = categoryTable.$('tr.selected');
               
                if ($row.length)
                {
                    var rowData = categoryTable.row('tr.selected').data();

                    $('#editCategoryModal').modal('show');
                    var $modal = $('#categoryModal');
                    $modal.find('.modal-title').text('Edit ' + rowData[0]); //Add category name to the title
                    $modal.find('.modal-body input').val(rowData[0]);//Add category name
                    $modal.find('.modal-body textarea').val(rowData[1] + "EXAMPLE DESCRIPTION") //Add Category Description to Description box????
                    
                    //On submit modal will submit data to database to be changed and redraw the table with the edited data.

                    //On close nothing happens

                }
                
            });

            //Remove Category Button Listener
            $('#remove-category').click(function () {
                var $row = categoryTable.$('tr.selected');

                if ($row.length)
                {
                    var rowData = categoryTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Category?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                categoryTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }

                //Update database on removed Category


                //categoryTable.row('.selected').remove().draw(false);
            });

            //Items Table Functions, These functions control the functionality and look and feel of the menu data tables
            var subCategoryTable = $('#subcategory').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#subcategory tbody').on('click', 'tr', function () {
                var rowData = subCategoryTable.row(this).data();


                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    subCategoryTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }

                //ACTIVATE TABLE SWITCHING!
                menuItemTable.clear();
                menuItemTable.draw();

                for (var item in menuItemDictionary)
                {
                    if (menuItemDictionary[item].value[0].toString() == rowData[0])
                    {
                        //Add new menuItem to the table
                        //menuItemTable.row.add([menuItemDictionary[item].key]).draw(false);
                        menuItemTable.row.add([menuItemDictionary[item].key, menuItemDictionary[item].value[2]]).draw( false );
                    }

                }

            });

            //Remove subcategory Button Listener
            $('#remove-subcategory').click(function () {
                var $row = subCategoryTable.$('tr.selected');

                if ($row.length) {
                    var rowData = subCategoryTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Subcategory?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                subCategoryTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }
            });

            //Addons Table Functions, These functions control the functionality and look and feel of the menu data tables
            var menuItemTable = $('#menuitem').DataTable({
                "paging": false,
                "info": false,
                "scrollY": "500px"
            });

            $('#menuitem tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');

                }
                else {
                    menuItemTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');

                }
            });

            //Remove menuitem Button Listener
            $('#remove-menuitem').click(function () {
                var $row = menuItemTable.$('tr.selected');

                if ($row.length) {
                    var rowData = menuItemTable.row('tr.selected').data();

                    BootstrapDialog.show({
                        title: 'Remove Menu Item?',
                        message: 'Are you sure you would like to remove ' + rowData[0] + '?',
                        buttons: [{
                            label: 'Cancel',
                            action: function (dialog) {
                                //Close the Dialog
                                dialog.close();
                            }
                        }, {
                            label: 'Remove',
                            action: function (dialog) {
                                menuItemTable.row('.selected').remove().draw(false);
                                //Close the Dialog
                                dialog.close();

                            }
                        }]
                    });

                }
            });

            //Add button listeners
            //Add category
            //$('#add-category').click(function () {
                //Display category Modal

                //Display modal
               // $('#categoryModal').modal('show');
                //var $modal = $('#categoryModal');
                //$modal.find('.modal-title').text('Add Category') // Change the modal title

                // On submit add new category and description to the database, redraw the table from the database, and select the new category
                //$modal.on('submit', function (e) {
                //    e.preventDefault();
                //    $.post('test',
                //        function (data, status, xhr) {
                //            alert($('#categorySubmit').value());

                //        });
                    //alert($('#categorySubmit').val());
                //});
                //alert($('#categorySubmit').val());
                // On close, do nothing.

                //Add Category to Database and Category table remove all items from subcategories and Menu Items
               @*categoryTable.row.add([
                    "@categoryList.First().Name",
                    "@categoryList.First().Description"
                ]).draw(false);*@


           // });

            //Add Category submit listener
            $('#addCategorySubmit').click(function() {
                console.log("Test");
                var categoryName = $('input').value();
                var categoryDescription = $('textarea').value();
                console.log(categoryName);
                console.log(categoryDescription);
                //alert(categoryName + " " + categoryDescription);
                $('#categoryModal').modal('hide');
            });

        });
    </script>

}