@model TriCodeTest.Models.UpdateUserRoleViewModel
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Update User Role";
}

<h2>Update User Roles</h2>

<input type="text" id="myInput" onkeyup="searchUsers()" placeholder="Search for names...">

<style>
    tr {
        cursor: default;
    }

    .highlight {
        background: #ffd800;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }
    .display {
        background-color: white;
    }

    button {
        padding: 5px;
        margin: 10px;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }

    #myInput {
        width: 100%; /* Full-width */
        font-size: 16px; /* Increase font-size */
        padding: 12px 20px 12px 40px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
        margin-top: 25px;
        margin-bottom: 20px; /* Add some space below the input */
    }
</style>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

<table id="userTable" class="display">
    <thead>
        <tr>
            <th>
                Name
            </th>
            @*<th>
                LastName
            </th>*@
            <th>
                Email
            </th>
            <th>
                Current Role
            </th>
            <th>
                Set Role
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in Model.Users)
        {
            <tr>
                <td>
                    @u.FirstName @u.LastName
                </td>
                @*<td>
                    @u.LastName
                </td>*@
                <td>
                    @u.Email
                </td>
                <td>
                    @foreach (var role in Model.Roles)
                    {
                        @if (u.Roles.First().RoleId == role.Id)
                        {
                            @role.Name
                        }
                    }
                </td>
                <td>
                    @*<a asp-controller="UpdateUserRole" asp-action="UpdateUserRole">Edit Role</a>*@
                    @*<a asp-action="setRoleCust" asp-route-id="@u.Email" class="btn btn-default">Set to Cust</a>*@
                    @*<a href="#" onclick="location.href='@Url.Action("setRoleCustomer")'">SetRoleCust</a><br />*@

                    @*@Html.ActionLink("Customer", "SetRoleCustomer", "UpdateUserRole", new { UserName = u.UserName }) |
                    @Html.ActionLink("Staff", "SetRoleStaff", "UpdateUserRole", new { id = u.UserName }) |
                    @Html.ActionLink("Admin", "SetRoleAdmin", "UpdateUserRole", new { id = u.UserName }) |*@
                    <a onclick="updateUserRole(@JsonConvert.SerializeObject(u),@JsonConvert.SerializeObject(Model.Roles.SingleOrDefault(r => r.Name == "Staff")))">Staff</a> |
                    <a onclick="updateUserRole(@JsonConvert.SerializeObject(u),@JsonConvert.SerializeObject(Model.Roles.SingleOrDefault(r => r.Name == "Admin")))">Admin</a> |
                    <a onclick="updateUserRole(@JsonConvert.SerializeObject(u),@JsonConvert.SerializeObject(Model.Roles.SingleOrDefault(r => r.Name == "Customer")))">Customer</a>

                    @*<a asp-action="Edit" asp-route-id="@u.UserName">Edit</a>*@
                </td>
                @*<a asp-controller="UpdateUserRole" asp-action="UpdateUserRole">Edit Role</a>*@
            </tr>
        }
    </tbody>
</table>
@*<a asp-controller="UpdateUserRole" asp-action="UpdateUserRole">Change User Roles</a>*@

<script>
    var test = @Html.Raw(JsonConvert.SerializeObject(Model));
    var x;

    function updateUserRole(user, roles){
        /// <summary>
        /// Updates the user role.
        /// </summary>
        /// <param name="user">The user.</param>
        /// <param name="roles">The roles.</param>
        /// <returns></returns>
        console.log(user.Email);
        console.log(roles.Name);
        var data = { Email:user.Email, Role:roles.Name };
        console.log(data);
        if (roles.Name == "Staff"){
            $.ajax({
                url: '@Url.Action("setRoleStaff", "UpdateUserRole")',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'aplication/json',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function(response){
                    if (response == 'True'){
                        location.reload();
                    }
                },
                error: function(error){
                    x = error;
                }
            });
        } else if (roles.Name == "Admin"){
            $.ajax({
                url: '@Url.Action("setRoleAdmin", "UpdateUserRole")',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'aplication/json',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function(response){
                    if (response == 'True'){
                        location.reload();
                    }
                },
                error: function(error){
                    x = error;
                }
            });
        } else if (roles.Name == "Customer"){
            $.ajax({
                url: '@Url.Action("setRoleCustomer", "UpdateUserRole")',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'aplication/json',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function(response){
                    if (response == 'True'){
                        location.reload();
                    }
                },
                error: function(error){
                    x = error;
                }
            });
        }
    }
function searchUsers() {
    /// <summary>
    /// Search users
    /// </summary>
    /// <returns></returns>
  var input, filter, table, tr, td, i;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("userTable");
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[0];
    if (td) {
      if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
}
</script>